task generateFiles(description: "Generate ale.bnd files for this host. This behaviour can be adjusted with environment variables (OS, ARCH, LIB, ...)", group: "build") {
	def inputTemplates = "*.template"
	doLast {
		copy {
			from projectDir
			into projectDir
			include inputTemplates
			rename { file -> file.replace('.template', '') }
			expand(project.properties)
    		filter { String line ->
    			if (line.startsWith("##"))
    				"# Generated file. Do not edit this file."
    			else
    				line.startsWith('#') ? null : line
    		}
		}
	}
}
compileJava.dependsOn(generateFiles)
processResources.dependsOn(generateFiles)

task javah(type:Exec, description: "Generate jni header files used by native builds", group: "build", dependsOn: classes) {
	inputs.files compileJava
	def nativeIncludes = "$bnd.project.targetDir/jni-headers"
	outputs.dir nativeIncludes
	commandLine "javah", "-jni", "-d", nativeIncludes, "-classpath", compileJava.classpath.join(':')+":"+compileJava.destinationDir, "be.iminds.iot.dianne.rl.environment.ale.ArcadeLearningEnvironment"
}
buildNative.dependsOn(javah)
jar.dependsOn(javah)
